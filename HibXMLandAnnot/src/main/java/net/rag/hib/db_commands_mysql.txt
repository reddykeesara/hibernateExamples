SELECT SCHEMA_NAME FROM information_schema.SCHEMATA;
drop database database_name;
create database database_name;
use database_name;
 create table user(id integer PRIMARY KEY, userName varchar(20), password varchar(100), role varchar(20));
 insert into user values(1,'raghu','$2a$12$JB.RPAUeAu5pqwWVMOrvP.QRaZLI/Miq9fnbNKlanqjOHRFB7iMty','USER');
show tables;
show columns from table_name;
describe table table_name;
show create table table_name;
drop table table_name;

-----------------------------
create table EmployeeInfo (EmpID integer PRIMARY KEY,EmpFname varchar(50),EmpLname varchar(50),Department varchar(50),	Project varchar(50),Address varchar(50),DOB DATE,Gender CHAR(1));
create table EmployeePosition(EmpID int,EmpPosition varchar(20), DateOfJoining date, Salary int,foreign key(EmpID) references EmployeeInfo(EmpID) on delete cascade);
insert into EmployeeInfo values(1,'Sanjay', 'Mehra','HR','P1','Hyderabad(HYD)','1976-12-01','M');
insert into EmployeeInfo values(2,'Ananya', 'Mishra', 'Admin','P2','Delhi(DEL)','1968-05-02','F');
insert into EmployeeInfo values(3,'Rohan','Diwan','Account','P3','Mumbai(BOM)','1980-01-01','M');
insert into EmployeeInfo values(4,'Sonia','Kulkarni','HR','P1','Hyderabad(HYD)','1992-05-02','F');
insert into EmployeeInfo values(5,'Ankit','Kapoor','Admin','P2','Delhi(DEL)','1994-07-03','M');
insert into EmployeePosition values(1, 'Manager', '2022-05-01',500000);
insert into EmployeePosition values(2, 'Executive','2022-05-02',75000);
insert into EmployeePosition values(3, 'Manager', '2022-05-01', 90000);
insert into EmployeePosition values(2, 'Lead', '2022-05-02', 85000);
insert into EmployeePosition values(1, 'Executive', '2022-05-01', 300000);
--------------
@GeneratedValue(strategy = GenerationType.IDENTITY)
creates indexes.. can be viewed by below query

SELECT DISTINCT INDEX_NAME
FROM information_schema.STATISTICS
WHERE (TABLE_SCHEMA = '<database_name>')
-------------------------------
SELECT ROUTINE_NAME
FROM information_schema.ROUTINES
WHERE (ROUTINE_TYPE = 'FUNCTION') AND (ROUTINE_SCHEMA = '<database_name>');
alternate to above
SHOW FUNCTION STATUS WHERE DB = 'world';



SELECT ROUTINE_NAME
FROM information_schema.ROUTINES
WHERE ROUTINE_TYPE = 'PROCEDURE' AND ROUTINE_SCHEMA = '<database_name>';
alternative to above

SHOW PROCEDURE STATUS WHERE DB = 'world';

SELECT SPECIFIC_NAME ,ROUTINE_TYPE ,PARAMETER_NAME
FROM information_schema.PARAMETERS
WHERE SPECIFIC_SCHEMA = '<database_name>';

SHOW TRIGGERS;

